model auction_zilliqa

variable highest_bid xtz = 0
variable highest_bidder address = 0

variable beneficiary address = @tz1KmuhR6P52hw6xs5P69BXJYAURaznhvN1k

asset pending_returns identified by incumbent = {
  incumbent   : address;
  val         : xtz
}

states =
| Open initial
| Closed

variable auction_start date = 2019-01-01T00:00:00
variable auction_end   date = 2019-02-01T00:00:00

specification {

  highest_is_not_pending :
    not (pending_return.contains highest_bidder);

  highest_is_highest :
    forall pr : prending_return,
      pr.val <= highest_bid and pr.incumbent <> highest_bidder

}


transaction place_bid = {

   condition auction_start <= now <= auction_end

   action
      if pending_returns.contains caller
      then
         let bid = (pending_returns.get caller).val in
         let new_bid = bid + transferred in
         if new_bid > highest_bid
         then (
           highest_bid := new_bid;
           highest_bidder := caller;
           pending_returns.remove caller;
           pending_returns.add { incumbent = highest_bidder;
                                 val = highest_bid })
         else
           pending_returns.update caller { val = new_bid }
      else
         if transferred > highest_bid
         then (
           highest_bid := transferred;
           highest_bidder := caller;
           pending_returns.add {incumbent = highest_bidder;
                                val = highest_bid })
         else fail (* no need to add bidder since there is
                      nothing to withdraw *)
}

transaction withdraw = {
   condition pending_returns.contains caller
   action transfer (pending_returns.get caller).val to caller
}

transaction endAuction = {
   condition now > auction_end
   transition from Open to Closed
   action transfer highest_bid to beneficiary
}
