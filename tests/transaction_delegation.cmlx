model extension transactionDelegation (

  role aRole;

  asset anAsset = {
    arole : aRole;
  }

  transaction aTransaction = {
    args = {
      anasset : anAsset;
    }
    called by [%delegable] anAsset.arole;
  }

) = {

  transaction aTransaction = {
    action:
      <%aTransaction>_space::Operator.remove
      (<%aTransaction>_space::Operator.get anasset);
  }

  namespace <%aTransaction>_space {
    asset Operator identified by anasset = {
      anasset  : anAsset;
      operator : address;
    }

    transaction setDelegate = {
      args = {
        Operator : Operator;
      }
      called by Operator.anasset.arole;
      action: Operator.add Operator;
    }

    transaction rmDelegate = {
      args = {
        Operator : Operator;
      }
      called by Operator.anasset.arole;
      action : Operator.remove Operator;
    }

    transaction from_addr = {
      args = {
        anasset  : anAsset;
      }
      condition:
        (Operator.get anasset).operator = caller.address;
      action : Operator.remove (Operator.get anasset);
    }
  }

}