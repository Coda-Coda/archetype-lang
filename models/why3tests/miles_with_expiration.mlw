module Miles

  use int.Int

  use cml.Types
  use cml.Contract
  use cml.Asset

  (* Mile *********************************************************************)
  type mile = {
     mile_id        : int;
     mutable amount : uint;
     expiration     : date;
  } invariant { amount >= 0 }

  function mile_key (m : mile) : int = m.mile_id
  function mile_sort (m : mile) : date = m.expiration

  (* declare mile as an Asset *)
  clone cml.Asset as Mile with type      key   = int,
                               type      sort  = date,
                               type      asset = mile,
                               function  akey  = mile_key,
                               function  asort = mile_sort,
                               predicate kle   = (<=)

  (* Owner ********************************************************************)
  type owner = {
     owner_id        : int;
     mutable miles   : Mile.collection;
  }

  function owner_key (o : owner) : int = o.owner_id

  (* declare mile as an Asset *)
  clone cml.Asset as Owner with type      key   = int,
                                type      sort  = int,
                                type      asset = owner,
                                function  akey  = owner_key,
                                function  asort = owner_key,
                                predicate kle = (<=)

  (****************************************************************************)

end