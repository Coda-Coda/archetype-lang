model autocallable

constant issuer role = @tz1KksC8RvjUWAbXYJuNrUbontHGor25Cztk
constant owner  role = @tz1uNrUbontHGor25CztkKksC8RvjUWAbXYJ
constant oracle role = @tz1r25CztkKksC8RvjuNrUWAbXYJUbontHGo  (* exchange *)

constant trade      date = 2017-03-14T00:00:00
constant initial_   date = 2017-03-14T00:00:00
constant issue      date = 2017-03-28T00:00:00
constant final      date = 2020-03-16T00:00:00
constant redemption date = 2020-03-30T00:00:00

constant boa_trigger rational = 12.666
constant sg_trigger  rational = 23.4725
constant ubs_trigger rational = 7.99

(* accumulate interest *)
variable acc_interet rational = 0

asset early identified by observation = {
  observation : date;
  redemption  : date;
  trigger     : int;
  value       : int;
} with {
  i1 : 0 <= trigger <= 100;
  i2 : 0 <= value   <= 100
} initialized by {
  { 2018-03-14T00:00:00; 2018-03-28T00:00:00; 95; 100 }
  { 2018-06-14T00:00:00; 2018-06-28T00:00:00; 95; 100 }
  { 2018-09-14T00:00:00; 2018-09-28T00:00:00; 95; 100 }
  { 2018-12-14T00:00:00; 2019-01-02T00:00:00; 95; 100 }
  { 2019-03-14T00:00:00; 2019-03-28T00:00:00; 80; 100 }
  { 2019-06-14T00:00:00; 2019-06-28T00:00:00; 80; 100 }
  { 2019-09-16T00:00:00; 2020-09-30T00:00:00; 70; 100 }
  { 2019-12-16T00:00:00; 2020-01-02T00:00:00; 70; 100 }
  { 2020-03-16T00:00:00; 2020-03-30T00:00:00; 70; 100 }
}


asset interest identified by observation = {
  observation : date;
  payment     : date;
  barrier     : int;
  rate        : rational;
} with {
  i1 : 0 <= barrier <= 100;
  i2 : 0 <= rate    <= 100
} initialized by {
  { 2017-06-14T00:00:00; 2017-06-28T00:00:00; 50; 2.025  }
  { 2017-09-14T00:00:00; 2017-09-28T00:00:00; 50; 4.05   }
  { 2017-12-14T00:00:00; 2018-01-02T00:00:00; 50; 6.075  }
  { 2018-03-14T00:00:00; 2018-03-28T00:00:00; 50; 8.1    }
  { 2018-06-14T00:00:00; 2018-06-28T00:00:00; 50; 10.125 }
  { 2018-09-14T00:00:00; 2018-09-28T00:00:00; 50; 12.15  }
  { 2018-12-14T00:00:00; 2019-01-02T00:00:00; 50; 14.175 }
  { 2019-03-14T00:00:00; 2019-03-28T00:00:00; 50; 16.2   }
  { 2019-06-14T00:00:00; 2019-06-28T00:00:00; 50; 18.225 }
  { 2019-09-16T00:00:00; 2019-09-30T00:00:00; 50; 20.25  }
  { 2019-12-16T00:00:00; 2020-01-02T00:00:00; 50; 22.275 }
  { 2020-03-16T00:00:00; 2020-03-30T00:00:00; 50; 24.3   }
}

(* serves as input and log *)
asset[%signedby oracle] underlyings identified by observation = {
  observation : date;
  boa : rational;  (* Bank of America *)
  sg  : rational;  (* Société Générale *)
  ubs : rational;  (* Union des Banques Suisses *)
}

states =
 | Created initial
 | Cancel
 | Confirmed       with { s1 : balance = 0 } (* contract paid *)
 | Defaulted
 | Ready
 | Terminated      with { s2 : balance = 0 }

 function computeExpected (cd : date) : tez = {

  specification
    s1 : spec1

  invariant redloop
  i1 : cond1

  invariant intloop
  i2 : cond2

  effect
    let expected = 0tz in
    let redem_date = initial_ in
    (* early redemption *)
    redloop : for (i in list) (
      break
    );
    (* interest *)
    let interest_acc = 0 in
    intloop : for (i in list) (
      break
    );
    expected
}

transition checkCompliance from Confirmed = {

  called by owner
  to Defaulted when actual_transferred >= computeExpected now
}
