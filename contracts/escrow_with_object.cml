model escrow_with_object

role buyer

role[%transferable] debitor = buyer

role seller

role[%transferable] creditor = seller

role oracle

variable[%traceable] price tez from buyer to creditor

variable[%traceable] [%mutable_signed [buyer, debitor] (instate Created)]
     penalty tez from seller to debitor = 0.1 * price

(* transaction deadline *)
variable[%mutable (buyer or seller) (state = Created)] deadline date

(* state machine *)
states =
 | Created initial
 | Aborted
 | Confirmed
 | Canceled
 | Transferred

transaction abort = {
  called by buyer or seller
  transition from Created to Aborted
}

transaction[%signedbyall [buyer, seller]] confirm = {
  transition from Created to Confirmed
  condition balance = price + penalty
}

(* type taskStatus = {
     date : date;
     status : string of [ “OK” | “KO” ]
   }
*)
object[%signedby oracle] taskStatus "https://oracle.io/tskstat.schema.json"

transaction finalize (task : taskStatus) = {
  action
    if task.date <= deadline and task.status = "OK"
    then (
       transfer price;
       transfer back penalty;
       state := Transferred
    )
    else (
       transfer penalty;
       transfer back price;
       state := Canceled
    )
}

specification {
  state = Transferred or state = Canceled -> balance = 0;
  state = Transferred or state = Canceled -> needs oracle;
  state = Transferred -> receives buyer = price
}
