archetype ideasbox

constant chairman : address = @tz1ZAQXACaEqryobpBoLbJUc2DjG5ZzrhARu
constant expiration : date = 2020-07-22

asset idea {
    id      : int;
    desc    : string;
    nbvotes : int = 0;
}

asset voter {
    addr : address;
    remaining : int = 5;
}

asset selected {
    wid : int;
}

/******************************************************************************/

entry register (a_voter : address) {
    called by chairman
    effect { voter.add({addr = a_voter}) }
}

entry add_idea(description : string) {
    require {
        r0 : now <= expiration - 2w;
    }
    effect {
        idea.add({ id = idea.count(); desc = description})
    }
}

entry vote(n : int, weight : int) {
    specification {
        p1 :
             let some v = voter[caller] in
             let some bv = before.voter[caller] in
                v.remaining = bv.remaining - weight
            otherwise true otherwise true
    }
    require {
        r1 : voter.contains(caller);
        r2 : expiration -2w < now <= expiration;
    }
    effect {
       if voter[caller].remaining >= weight then (
            voter[caller].remaining -= weight;
            idea[n].nbvotes += weight
        )
    }
}

entry finalize() {
    called by chairman
    require {
        r3 : now > expiration;
        r4 : selected.count() = 0; /* cannot finalize twice */
    }
    effect {
        for i in idea.select(the.nbvotes >= 5).sort(desc(nbvotes)).head(3) do
            selected.add({i})
        done
    }
}

specification {
    s1 : idea.sum(nbvotes) = voter.count() * 5 - voter.sum(remaining)
}
